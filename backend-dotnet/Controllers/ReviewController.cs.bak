using Microsoft.AspNetCore.Mvc;
using ClothingStore.Services;
using ClothingStore.Models;

namespace ClothingStore.Controllers
{
    [ApiController]
    [Route("api/reviews")]
    public class ReviewController : ControllerBase
    {
        private readonly ReviewService _reviewService;
        
        public ReviewController(ReviewService reviewService)
        {
            _reviewService = reviewService;
        }
        
        [HttpPost]
        public async Task<ActionResult<Review>> AddReview([FromBody] ReviewRequest request)
        {
            try
            {
                var review = new Review
                {
                    UserId = request.UserId,
                    ProductId = request.ProductId,
                    Rating = request.Rating,
                    Comment = request.Comment
                };
                
                var savedReview = await _reviewService.SaveReviewAsync(review);
                return Ok(savedReview);
            }
            catch (Exception e)
            {
                return BadRequest(new { error = e.Message });
            }
        }
        
        [HttpGet("product/{productId}")]
        public async Task<ActionResult<List<Review>>> GetProductReviews(long productId)
        {
            var reviews = await _reviewService.GetReviewsByProductAsync(productId);
            return Ok(reviews);
        }
        
        [HttpGet("my-reviews")]
        public async Task<ActionResult<List<Review>>> GetMyReviews([FromQuery] long userId)
        {
            var reviews = await _reviewService.GetReviewsByUserAsync(userId);
            return Ok(reviews);
        }
    }
    
    public class ReviewRequest
    {
        public long UserId { get; set; }
        public long ProductId { get; set; }
        public int Rating { get; set; }
        public string? Comment { get; set; }
    }
}